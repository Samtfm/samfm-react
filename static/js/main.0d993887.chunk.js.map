{"version":3,"sources":["Nav.js","ZoomableImage.js","Gallery.js","Home.js","pictures.js","App.js","serviceWorker.js","index.js"],"names":["Nav","ZoomableImage","title","url","width","height","useState","expanded","setExpanded","className","onClick","src","alt","Gallery","pictures","map","picture","Home","class","target","href","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iWAwBeA,I,QCFAC,G,MApBO,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAmB,KAAZC,OACTC,oBAAS,IADY,mBAC9CC,EAD8C,KACpCC,EADoC,KAErD,OACE,6BACGD,GACC,yBACEE,UAAW,wBACXC,QAAS,kBAAMF,GAAY,KAE3B,yBACEG,IAAKR,EACLS,IAAKV,KAIX,yBAAKS,IAAKR,EAAKS,IAAKV,EAAOE,MAAOA,EAAOM,QAAS,kBAAMF,GAAY,SCM3DK,G,MAnBC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACE,iCACE,wBAAIL,UAAW,sBACZK,EAASC,KAAI,SAAAC,GAAO,OACnB,4BACE,kBAAC,EAAD,CACEd,MAAOc,EAAQd,MACfC,IAAKa,EAAQb,IACbC,MAAO,IACPC,OAAQ,c,MC4CPY,MAvDf,WACE,OACE,6BAASR,UAAU,QACjB,6BAASA,UAAU,sBACjB,kDAAuB,0BAAMS,MAAM,UAAZ,UACvB,kEAEF,6BAAST,UAAU,aACjB,yFACA,wBAAIS,MAAM,SACR,4BACE,2BACE,gDACA,uBAAGC,OAAO,QAAQC,KAAK,qCAAvB,8BAGA,sDAGJ,4BACE,2BACE,iDACA,uBAAGD,OAAO,QAAQC,KAAK,4CAAvB,8BAKJ,4BACE,2BACE,sDACA,uBAAGD,OAAO,QAAQC,KAAK,uEAAvB,qBAKJ,4BACE,2BACE,0DACA,uBAAGD,OAAO,QAAQC,KAAK,mCAAvB,uBAOR,uBACEX,UAAU,sBACVW,KAAK,6BAFP,iBCjBSN,EA/BE,CACf,CACEZ,MAAO,aACPC,IAAK,mCAEP,CACED,MAAO,aACPC,IAAK,mCAEP,CACED,MAAO,aACPC,IAAK,mCAEP,CACED,MAAO,aACPC,IAAK,mCAEP,CACED,MAAO,aACPC,IAAK,mCAEP,CACED,MAAO,aACPC,IAAK,mCAEP,CACED,MAAO,aACPC,IAAK,oCCGMkB,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aACV,4CAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,CAASR,SAAUA,KAErB,kBAAC,IAAD,CAAOQ,KAAK,KACV,kBAAC,EAAD,UCXUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0d993887.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport './Nav.css';\n\nfunction Nav() {\n  return (\n      <nav>\n        <ul class='Nav-links'>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/projects\">Projects</Link>\n          </li>\n          <li>\n            <Link to=\"/gallery\">Gallery</Link>\n          </li>\n        </ul>\n      </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState, useEffect } from 'react';\nimport './ZoomableImage.css';\nconst ZoomableImage = ({title, url, width, height}) => {\n  const [expanded, setExpanded] = useState(false)\n  return (\n    <div>\n      {expanded && (\n        <div\n          className={'ZoomableImage-overlay'}\n          onClick={() => setExpanded(false)}\n        >\n          <img\n            src={url}\n            alt={title}\n          />\n        </div>\n      )}\n      <img src={url} alt={title} width={width} onClick={() => setExpanded(true)} />\n    </div>\n  );\n}\n\nexport default ZoomableImage;\n","import React from 'react';\nimport ZoomableImage from './ZoomableImage';\nimport './Gallery.css';\n\nconst Gallery = ({pictures}) => {\n  return (\n    <section>\n      <ul className={'Gallery-photo-grid'}>\n        {pictures.map(picture => (\n          <li>\n            <ZoomableImage\n              title={picture.title}\n              url={picture.url}\n              width={160}\n              height={100}\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default Gallery;\n","import React from 'react';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <section className=\"Home\">\n      <section className=\"Home-heading-block\">\n        <h1>Hi! You've reached <span class='accent'>SamFM</span></h1>\n        <p>Artist, Software Developer, Friend</p>\n      </section>\n      <section className=\"Home-body\">\n        <h1>Would you like to explore some of my projects? You can...</h1>\n        <ul class=\"links\">\n          <li>\n            <p>\n              <span>...trade with </span>\n              <a target=\"blank\" href=\"http://eggs-nihilo.herokuapp.com/\">\n                friendly sewer inhabitants\n              </a>\n              <span> (mobile friendly)</span>\n            </p>\n          </li>\n          <li>\n            <p>\n              <span>...play with a </span>\n              <a target=\"blank\" href=\"https://samtfm.github.io/in-other-words/\">\n                magical fridge thesaurus\n              </a>\n            </p>\n          </li>\n          <li>\n            <p>\n              <span>...burn food over a </span>\n              <a target=\"blank\" href=\"http://ludumdare.com/compo/ludum-dare-36/?action=preview&uid=113483\">\n                rustic campfire\n              </a>\n            </p>\n          </li>\n          <li>\n            <p>\n              <span>...play an artsy set of </span>\n              <a target=\"blank\" href=\"https://samtfm.itch.io/hoppers/\">\n                moody not-games\n              </a>\n            </p>\n          </li>\n        </ul>\n      </section>\n      <a\n        className=\"Home-contact-button\"\n        href=\"mailto:sfmemail@gmail.com\"\n      >\n        contact me!\n      </a>\n    </section>\n  );\n}\n\nexport default Home;\n","const pictures = [\n  {\n    title: 'test image',\n    url: 'https://placekitten.com/400/350'\n  },\n  {\n    title: 'test image',\n    url: 'https://placekitten.com/400/351'\n  },\n  {\n    title: 'test image',\n    url: 'https://placekitten.com/400/352'\n  },\n  {\n    title: 'test image',\n    url: 'https://placekitten.com/400/353'\n  },\n  {\n    title: 'test image',\n    url: 'https://placekitten.com/400/354'\n  },\n  {\n    title: 'test image',\n    url: 'https://placekitten.com/400/355'\n  },\n  {\n    title: 'test image',\n    url: 'https://placekitten.com/400/356'\n  },\n]\n\nexport default pictures;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Nav from './Nav'\nimport Gallery from './Gallery'\nimport Home from './Home'\nimport pictures from './pictures'\n\nfunction App() {\n  return (\n    <Router>\n      <br />\n      <Switch>\n        <Route path=\"/projects\">\n          <div> Projects </div>\n        </Route>\n        <Route path=\"/gallery\">\n          <Gallery pictures={pictures}/>\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css'\nimport './base_styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}